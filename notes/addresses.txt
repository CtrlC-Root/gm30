15x 0x1000 sized segments from 0x1000 to 0xF000
last byte (base + 0x0FFF) stores the state of the data stored in the segment
the CPS reads the last byte of each segment to identify which ones are in
use to store relevant data and then reads from or writes to them as needed

Segment state legend:

00 -> contents will typically be filled with 0x00
02 -> unknown data (likely calibration data, seems identical on working radios, breaks radio if messed up)
06 -> ???
16 -> frequency data
17 -> ???
18 -> ???
19 -> ???
24 -> channel data
25 -> ???
26 -> ???
04 -> general data
06 -> phone data
FF -> contents will all be 0xFF


Unknown segment data speculation:

06 seems to actually have data

00000000: 0102 0304 0506 0708 0900 0a0b 0c0d 00ff  ................
00000010: ffff ffff ffff ffff ffff ffff ffff ffff  ................
00000020: ffff ffff ffff ffff ffff ffff ffff ffff  ................
00000030: ffff ffff ffff ffff ffff ffff ffff ffff  ................
00000040: ffff ffff ffff 0b0b 0b0b 0b00 0000 0000  ................
00000050: 0800 0800 0800 0000 0000 0000 0000 0000  ................
00000060: 0000 0000 0f00 0000 0000 0000 0000 0000  ................



17, 18, 19 contain repeating pattern:
this actually looks like frequency memory that was used to store empty entries
because the repeating sequence length and format matches

ffff ffff ffff ffff 00ff ffff ff06 1100



25, 26 contains repeating pattern:
this actually looks like channel memory that was used to store empty entries
because the repeating sequence length and format matches

00000000: ffff ffff ffff ffff ffff 00ff ffff ffff  ................
00000010: ffff ffff ff00 ffff ffff ffff ffff ffff  ................
00000020: 00ff ffff ffff ffff ffff ff00 ffff ffff  ................
00000030: ffff ffff ffff 00ff ffff ffff ffff ffff  ................
00000040: ff00 ffff ffff ffff ffff ffff 00ff ffff  ................
00000050: ffff ffff ffff ff00 ffff ffff ffff ffff  ................
00000060: ffff 00ff ffff ffff ffff ffff ff00 ffff  ................
00000070: ffff ffff ffff ffff 00ff ffff ffff ffff  ................
00000080: ffff ff00 ffff ffff ffff ffff ffff 00ff  ................
00000090: ffff ffff ffff ffff ff00 ffff ffff ffff  ................
000000a0: ffff ffff 00ff ffff ffff ffff ffff ff00  ................
000000b0: ffff ffff ffff ffff ffff 00ff ffff ffff  ................
